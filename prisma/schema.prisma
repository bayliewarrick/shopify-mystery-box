// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Shop {
  id          Int      @id @default(autoincrement())
  shopDomain  String   @unique
  accessToken String
  shopName    String?
  email       String?
  currency    String?
  timezone    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  mysteryBoxes MysteryBox[]
  products     ProductCache[]
  
  @@map("shops")
}

model MysteryBox {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  
  // Value parameters
  minValue    Float
  maxValue    Float
  
  // Item quantity settings
  minItems    Int      @default(1)
  maxItems    Int
  
  // Product filtering
  includeTags String // JSON string of tags to include
  excludeTags String // JSON string of tags to exclude
  includeProductTypes String // JSON string of product types to include
  excludeProductTypes String // JSON string of product types to exclude
  
  // Status and settings
  isActive    Boolean  @default(true)
  
  // Timestamps
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  shopId      Int
  shop        Shop     @relation(fields: [shopId], references: [id], onDelete: Cascade)
  
  instances   BoxInstance[]
  
  @@map("mystery_boxes")
}

model BoxInstance {
  id          Int      @id @default(autoincrement())
  
  // Generated box details
  totalValue  Float
  itemCount   Int
  
  // Product selection
  products    String   // JSON string of selected products
  
  // Timestamps
  generatedAt DateTime @default(now())
  
  // Relations
  mysteryBoxId Int
  mysteryBox   MysteryBox @relation(fields: [mysteryBoxId], references: [id], onDelete: Cascade)
  
  @@map("box_instances")
}

model ProductCache {
  id                Int      @id @default(autoincrement())
  shopId            Int
  
  // Shopify product data
  shopifyProductId  String
  title             String
  handle            String
  description       String?
  vendor            String?
  productType       String?
  tags              String   // JSON array of tags
  
  // Pricing
  price             Float
  compareAtPrice    Float?
  costPerItem       Float?
  
  // Inventory
  inventory         Int      @default(0)
  available         Boolean  @default(true)
  
  // Images
  imageUrl          String?
  
  // Metadata
  isActive          Boolean  @default(true)
  lastSynced        DateTime @default(now())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relations
  shop              Shop     @relation(fields: [shopId], references: [id], onDelete: Cascade)
  
  @@unique([shopId, shopifyProductId])
  @@map("product_cache")
}
